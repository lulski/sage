/*
 * This file was generated by the Gradle 'init' task.
 */


plugins {
    id 'java-library'
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id "info.solidsoft.pitest" version "1.15.0"
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.spring.io/milestone')
    }

    maven {
        url = uri('https://repo.spring.io/snapshot')
    }

    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
// https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-starter-webmvc-ui
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas:3.3.1'

    api libs.org.springframework.boot.spring.boot.starter.web
    api libs.org.springframework.boot.spring.boot.starter.data.jpa
    api libs.jakarta.persistence.jakarta.persistence.api
    api libs.jakarta.servlet.jakarta.servlet.api
    api libs.jakarta.validation.jakarta.validation.api
    runtimeOnly libs.org.springframework.boot.spring.boot.properties.migrator
    runtimeOnly libs.org.springframework.boot.spring.boot.devtools
    runtimeOnly libs.com.microsoft.sqlserver.mssql.jdbc
    runtimeOnly libs.com.h2database.h2
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.3.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.3'

}

group = 'com.lulski.blog'
version = '0.0.1-SNAPSHOT'
description = 'sage'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}


pitest {
    pitestVersion = "1.14.4"
    junit5PluginVersion = "1.2.0"    //with no longer shaded junit-platform-launcher
    verbose = true  //for "ClassNotFoundException: org.junit.platform.launcher.core.LauncherFactory" which should not happen
    targetClasses = ['com.lulski.**']
    targetTests = ['com.lulski.**']
    mutators = ['ALL']
    threads = 4
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.release = 21
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}



test {
    useJUnitPlatform()
}

def profiles = 'h2'

//bootRun {
//    args = ["--spring.profiles.active=" + profiles]
//}